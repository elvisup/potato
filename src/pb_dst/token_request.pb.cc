// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: token_request.proto

#include "token_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_token_5frequest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_token_5frequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TokenActivation;
}  // namespace protobuf_token_5frequest_2eproto
namespace sputnik {
namespace pb {
class TokenActivationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TokenActivation>
      _instance;
} _TokenActivation_default_instance_;
class TokenActivationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TokenActivationRequest>
      _instance;
} _TokenActivationRequest_default_instance_;
class DeleteTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTokenRequest>
      _instance;
} _DeleteTokenRequest_default_instance_;
}  // namespace pb
}  // namespace sputnik
namespace protobuf_token_5frequest_2eproto {
static void InitDefaultsTokenActivation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sputnik::pb::_TokenActivation_default_instance_;
    new (ptr) ::sputnik::pb::TokenActivation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sputnik::pb::TokenActivation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TokenActivation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTokenActivation}, {}};

static void InitDefaultsTokenActivationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sputnik::pb::_TokenActivationRequest_default_instance_;
    new (ptr) ::sputnik::pb::TokenActivationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sputnik::pb::TokenActivationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TokenActivationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTokenActivationRequest}, {
      &protobuf_token_5frequest_2eproto::scc_info_TokenActivation.base,}};

static void InitDefaultsDeleteTokenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sputnik::pb::_DeleteTokenRequest_default_instance_;
    new (ptr) ::sputnik::pb::DeleteTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sputnik::pb::DeleteTokenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteTokenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteTokenRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TokenActivation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TokenActivationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteTokenRequest.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sputnik::pb::TokenActivation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sputnik::pb::TokenActivation, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sputnik::pb::TokenActivation, active_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sputnik::pb::TokenActivationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sputnik::pb::TokenActivationRequest, token_activations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sputnik::pb::DeleteTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sputnik::pb::DeleteTokenRequest, delete_tokens_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sputnik::pb::TokenActivation)},
  { 7, -1, sizeof(::sputnik::pb::TokenActivationRequest)},
  { 13, -1, sizeof(::sputnik::pb::DeleteTokenRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sputnik::pb::_TokenActivation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sputnik::pb::_TokenActivationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sputnik::pb::_DeleteTokenRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "token_request.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023token_request.proto\022\nsputnik.pb\"0\n\017Tok"
      "enActivation\022\r\n\005token\030\001 \001(\005\022\016\n\006active\030\002 "
      "\001(\010\"P\n\026TokenActivationRequest\0226\n\021token_a"
      "ctivations\030\001 \003(\0132\033.sputnik.pb.TokenActiv"
      "ation\"+\n\022DeleteTokenRequest\022\025\n\rdelete_to"
      "kens\030\001 \003(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "token_request.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_token_5frequest_2eproto
namespace sputnik {
namespace pb {

// ===================================================================

void TokenActivation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TokenActivation::kTokenFieldNumber;
const int TokenActivation::kActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TokenActivation::TokenActivation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_token_5frequest_2eproto::scc_info_TokenActivation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sputnik.pb.TokenActivation)
}
TokenActivation::TokenActivation(const TokenActivation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&token_, &from.token_,
    static_cast<size_t>(reinterpret_cast<char*>(&active_) -
    reinterpret_cast<char*>(&token_)) + sizeof(active_));
  // @@protoc_insertion_point(copy_constructor:sputnik.pb.TokenActivation)
}

void TokenActivation::SharedCtor() {
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&token_)) + sizeof(active_));
}

TokenActivation::~TokenActivation() {
  // @@protoc_insertion_point(destructor:sputnik.pb.TokenActivation)
  SharedDtor();
}

void TokenActivation::SharedDtor() {
}

void TokenActivation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TokenActivation::descriptor() {
  ::protobuf_token_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_token_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TokenActivation& TokenActivation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_token_5frequest_2eproto::scc_info_TokenActivation.base);
  return *internal_default_instance();
}


void TokenActivation::Clear() {
// @@protoc_insertion_point(message_clear_start:sputnik.pb.TokenActivation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&token_)) + sizeof(active_));
  _internal_metadata_.Clear();
}

bool TokenActivation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sputnik.pb.TokenActivation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sputnik.pb.TokenActivation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sputnik.pb.TokenActivation)
  return false;
#undef DO_
}

void TokenActivation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sputnik.pb.TokenActivation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 token = 1;
  if (this->token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->token(), output);
  }

  // bool active = 2;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->active(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sputnik.pb.TokenActivation)
}

::google::protobuf::uint8* TokenActivation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sputnik.pb.TokenActivation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 token = 1;
  if (this->token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->token(), target);
  }

  // bool active = 2;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->active(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sputnik.pb.TokenActivation)
  return target;
}

size_t TokenActivation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sputnik.pb.TokenActivation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 token = 1;
  if (this->token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->token());
  }

  // bool active = 2;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TokenActivation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sputnik.pb.TokenActivation)
  GOOGLE_DCHECK_NE(&from, this);
  const TokenActivation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TokenActivation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sputnik.pb.TokenActivation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sputnik.pb.TokenActivation)
    MergeFrom(*source);
  }
}

void TokenActivation::MergeFrom(const TokenActivation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sputnik.pb.TokenActivation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token() != 0) {
    set_token(from.token());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
}

void TokenActivation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sputnik.pb.TokenActivation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TokenActivation::CopyFrom(const TokenActivation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sputnik.pb.TokenActivation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenActivation::IsInitialized() const {
  return true;
}

void TokenActivation::Swap(TokenActivation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TokenActivation::InternalSwap(TokenActivation* other) {
  using std::swap;
  swap(token_, other->token_);
  swap(active_, other->active_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TokenActivation::GetMetadata() const {
  protobuf_token_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_token_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TokenActivationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TokenActivationRequest::kTokenActivationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TokenActivationRequest::TokenActivationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_token_5frequest_2eproto::scc_info_TokenActivationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sputnik.pb.TokenActivationRequest)
}
TokenActivationRequest::TokenActivationRequest(const TokenActivationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      token_activations_(from.token_activations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sputnik.pb.TokenActivationRequest)
}

void TokenActivationRequest::SharedCtor() {
}

TokenActivationRequest::~TokenActivationRequest() {
  // @@protoc_insertion_point(destructor:sputnik.pb.TokenActivationRequest)
  SharedDtor();
}

void TokenActivationRequest::SharedDtor() {
}

void TokenActivationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TokenActivationRequest::descriptor() {
  ::protobuf_token_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_token_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TokenActivationRequest& TokenActivationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_token_5frequest_2eproto::scc_info_TokenActivationRequest.base);
  return *internal_default_instance();
}


void TokenActivationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sputnik.pb.TokenActivationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_activations_.Clear();
  _internal_metadata_.Clear();
}

bool TokenActivationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sputnik.pb.TokenActivationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sputnik.pb.TokenActivation token_activations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_token_activations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sputnik.pb.TokenActivationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sputnik.pb.TokenActivationRequest)
  return false;
#undef DO_
}

void TokenActivationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sputnik.pb.TokenActivationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sputnik.pb.TokenActivation token_activations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->token_activations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->token_activations(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sputnik.pb.TokenActivationRequest)
}

::google::protobuf::uint8* TokenActivationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sputnik.pb.TokenActivationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sputnik.pb.TokenActivation token_activations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->token_activations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->token_activations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sputnik.pb.TokenActivationRequest)
  return target;
}

size_t TokenActivationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sputnik.pb.TokenActivationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sputnik.pb.TokenActivation token_activations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->token_activations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->token_activations(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TokenActivationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sputnik.pb.TokenActivationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TokenActivationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TokenActivationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sputnik.pb.TokenActivationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sputnik.pb.TokenActivationRequest)
    MergeFrom(*source);
  }
}

void TokenActivationRequest::MergeFrom(const TokenActivationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sputnik.pb.TokenActivationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  token_activations_.MergeFrom(from.token_activations_);
}

void TokenActivationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sputnik.pb.TokenActivationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TokenActivationRequest::CopyFrom(const TokenActivationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sputnik.pb.TokenActivationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenActivationRequest::IsInitialized() const {
  return true;
}

void TokenActivationRequest::Swap(TokenActivationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TokenActivationRequest::InternalSwap(TokenActivationRequest* other) {
  using std::swap;
  CastToBase(&token_activations_)->InternalSwap(CastToBase(&other->token_activations_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TokenActivationRequest::GetMetadata() const {
  protobuf_token_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_token_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteTokenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTokenRequest::kDeleteTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTokenRequest::DeleteTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_token_5frequest_2eproto::scc_info_DeleteTokenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sputnik.pb.DeleteTokenRequest)
}
DeleteTokenRequest::DeleteTokenRequest(const DeleteTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      delete_tokens_(from.delete_tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sputnik.pb.DeleteTokenRequest)
}

void DeleteTokenRequest::SharedCtor() {
}

DeleteTokenRequest::~DeleteTokenRequest() {
  // @@protoc_insertion_point(destructor:sputnik.pb.DeleteTokenRequest)
  SharedDtor();
}

void DeleteTokenRequest::SharedDtor() {
}

void DeleteTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteTokenRequest::descriptor() {
  ::protobuf_token_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_token_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteTokenRequest& DeleteTokenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_token_5frequest_2eproto::scc_info_DeleteTokenRequest.base);
  return *internal_default_instance();
}


void DeleteTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sputnik.pb.DeleteTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delete_tokens_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sputnik.pb.DeleteTokenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 delete_tokens = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_delete_tokens())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_delete_tokens())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sputnik.pb.DeleteTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sputnik.pb.DeleteTokenRequest)
  return false;
#undef DO_
}

void DeleteTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sputnik.pb.DeleteTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 delete_tokens = 1;
  if (this->delete_tokens_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _delete_tokens_cached_byte_size_));
  }
  for (int i = 0, n = this->delete_tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->delete_tokens(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sputnik.pb.DeleteTokenRequest)
}

::google::protobuf::uint8* DeleteTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sputnik.pb.DeleteTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 delete_tokens = 1;
  if (this->delete_tokens_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _delete_tokens_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->delete_tokens_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sputnik.pb.DeleteTokenRequest)
  return target;
}

size_t DeleteTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sputnik.pb.DeleteTokenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 delete_tokens = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->delete_tokens_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _delete_tokens_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sputnik.pb.DeleteTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sputnik.pb.DeleteTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sputnik.pb.DeleteTokenRequest)
    MergeFrom(*source);
  }
}

void DeleteTokenRequest::MergeFrom(const DeleteTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sputnik.pb.DeleteTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delete_tokens_.MergeFrom(from.delete_tokens_);
}

void DeleteTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sputnik.pb.DeleteTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTokenRequest::CopyFrom(const DeleteTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sputnik.pb.DeleteTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTokenRequest::IsInitialized() const {
  return true;
}

void DeleteTokenRequest::Swap(DeleteTokenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTokenRequest::InternalSwap(DeleteTokenRequest* other) {
  using std::swap;
  delete_tokens_.InternalSwap(&other->delete_tokens_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteTokenRequest::GetMetadata() const {
  protobuf_token_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_token_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace sputnik
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sputnik::pb::TokenActivation* Arena::CreateMaybeMessage< ::sputnik::pb::TokenActivation >(Arena* arena) {
  return Arena::CreateInternal< ::sputnik::pb::TokenActivation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sputnik::pb::TokenActivationRequest* Arena::CreateMaybeMessage< ::sputnik::pb::TokenActivationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sputnik::pb::TokenActivationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sputnik::pb::DeleteTokenRequest* Arena::CreateMaybeMessage< ::sputnik::pb::DeleteTokenRequest >(Arena* arena) {
  return Arena::CreateInternal< ::sputnik::pb::DeleteTokenRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
